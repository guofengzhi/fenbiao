spring.shardingsphere.datasource.names=ds

spring.shardingsphere.datasource.ds.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.ds.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds.url=jdbc:mysql://localhost:3306/shardingsphere0?serverTimezone=UTC&characterEncoding=utf8
spring.shardingsphere.datasource.ds.username=root
spring.shardingsphere.datasource.ds.password=123456

spring.shardingsphere.props.sql.show=true

spring.shardingsphere.sharding.tables.t_user.actual-data-nodes=ds.t_user$->{0..1}
#因为snowflake为64位长整型所以主键字段要求为bigint java字段要求Long
spring.shardingsphere.sharding.tables.t_user.key-generator.column=id
spring.shardingsphere.sharding.tables.t_user.key-generator.type=SNOWFLAKE

#行内分片策略，分片字段为整形，根据取余运算分表
#spring.shardingsphere.sharding.tables.t_user.table-strategy.inline.sharding-column=sex
#spring.shardingsphere.sharding.tables.t_user.table-strategy.inline.algorithm-expression=t_user$->{sex % 2}

#自定义精确的分表策略
spring.shardingsphere.sharding.tables.t_user.table-strategy.standard.sharding-column=sex
spring.shardingsphere.sharding.tables.t_user.table-strategy.standard.precise-algorithm-class-name=com.example.fenbiao.algorithm.MyAlgorithm
